<UserControl x:Class="Prover.GUI.ViewModels.VerificationTestViews.PTVerificationViews.VolumeTest.Card"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                xmlns:cal="http://www.caliburnproject.org"
                xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                xmlns:local="clr-namespace:Prover.GUI.Converters"
                xmlns:controls="clr-namespace:Prover.GUI.Controls"
                xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                TextElement.Foreground="{DynamicResource MaterialDesignBody}"
                Background="{DynamicResource MaterialDesignPaper}"
             
                TextElement.FontWeight="Medium"
                TextElement.FontSize="14"
                FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
                mc:Ignorable="d" 
> 
    <UserControl.Resources>
        <local:BoolToVisibilityConverter
         x:Key="BoolToHiddenConverter"
         TrueValue="Visible" FalseValue="Collapsed" />
    </UserControl.Resources>
    <materialDesign:Card materialDesign:ShadowAssist.ShadowDepth="Depth0">
        <StackPanel Orientation="Vertical">
            <StackPanel>
                <materialDesign:Card materialDesign:ShadowAssist.ShadowDepth="Depth0">
                    <StackPanel>
                        <controls:ValueDescriptionControl Label="Applied Input (Tach. Reading)" Value="{Binding AppliedInput}"/>
                        <materialDesign:ColorZone 
                                        Padding="2"
                            Margin="2"
                                      Content="Uncorrected Volume" 
                                      Mode="PrimaryDark" 
                                      materialDesign:ShadowAssist.ShadowDepth="Depth1"/>
                        <controls:PercentageControl 
                            Margin="5"
                            HorizontalAlignment="Left"
                            DisplayValue="{Binding Volume.UnCorrectedPercentError}" 
                            Passed="{Binding Volume.UnCorrectedHasPassed}"/>

                        <UniformGrid Columns="2" Margin="2 5">
                            <controls:ValueDescriptionControl Label="Start Reading" Value="{Binding StartUncorrected}"/>
                            <controls:ValueDescriptionControl Label="End Reading" Value="{Binding EndUncorrected}"/>
                            <controls:ValueDescriptionControl Label="EVC Calculated" Value="{Binding EvcUncorrected}"/>
                            <controls:ValueDescriptionControl Label="True Calculated" Value="{Binding TrueUncorrected}"/>
                            <controls:ValueDescriptionControl Label="Pulse Count" Value="{Binding UncorrectedPulseCount}"/>
                            <controls:ValueDescriptionControl Label="Multiplier" Value="{Binding UnCorrectedMultiplierDescription}"/>
                        </UniformGrid>

                    </StackPanel>
                </materialDesign:Card>
                <materialDesign:Card materialDesign:ShadowAssist.ShadowDepth="Depth0">
                    <StackPanel>
                        <materialDesign:ColorZone Padding="2" 
                                      Content="Corrected Volume" 
                                      Margin="2"
                                      Mode="PrimaryDark" 
                                      materialDesign:ShadowAssist.ShadowDepth="Depth1"/>
                        
                            <controls:PercentageControl 
                            Margin="5"
                            HorizontalAlignment="Left"
                            DisplayValue="{Binding Volume.CorrectedPercentError}" 
                            Passed="{Binding Volume.CorrectedHasPassed}"/>
                        
                        <UniformGrid Columns="2" Margin="2 5">

                            <controls:ValueDescriptionControl Label="Start Reading" Value="{Binding StartCorrected}"/>
                            <controls:ValueDescriptionControl Label="End Reading" Value="{Binding EndCorrected}"/>
                            <controls:ValueDescriptionControl Label="EVC Calculated" Value="{Binding EvcCorrected}"/>
                            <controls:ValueDescriptionControl Label="True Calculated"                                 
                                                          Value="{Binding TrueCorrected}"/>
                            <controls:ValueDescriptionControl Label="Pulse Count" Value="{Binding CorrectedPulseCount}"/>
                            <controls:ValueDescriptionControl Label="Multiplier" Value="{Binding CorrectedMultiplierDescription}"/>
                            
                        </UniformGrid>

                    </StackPanel>
                </materialDesign:Card>
                <!--<Grid VerticalAlignment="Top" Height="75" Visibility="{Binding ShowTestButtons, Converter={StaticResource BoolToHiddenConverter}}" >
                    <Button Width="200" Margin="10"
                            	        Content="START"
                            	        HorizontalAlignment="Right"
                            	        Visibility="{Binding ShowBeginTestButton, Converter={StaticResource BoolToHiddenConverter}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <cal:ActionMessage MethodName="StartTestCommand" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                    <Button Width="200" Margin="10"
                    		    Content="STOP"
                                HorizontalAlignment="Right"
                    		    Visibility="{Binding ShowStopTestButton, Converter={StaticResource BoolToHiddenConverter}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <cal:ActionMessage MethodName="StopTestCommand" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </Grid>-->
            </StackPanel>
            
        </StackPanel>
    </materialDesign:Card>
</UserControl>
